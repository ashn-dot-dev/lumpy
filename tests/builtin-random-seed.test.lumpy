let source =
```
class BuiltinExternalInteger(Builtin):
    name = "externint"

    def function(self, arguments):
        Builtin.expect_argument_count(arguments, 0)
        return External.new(123)

let_builtin(BASE_ENVIRONMENT.store, BuiltinExternalInteger())
```;
extend(source);

# Test that a random number can be seeded with all builtin types.
random::seed(null);
random::seed(true);
random::seed(123.0);
random::seed("foo");
random::seed([123, "foo"]);
random::seed({123: "foo"});
random::seed({123, "foo"});
random::seed(function(){});
random::seed(dumpln);
random::seed(externint());

# Test that the same seed will produce the same set of random values.
random::seed("foo");
let x = [random::number(0, 1), random::number(0, 1), random::number(0, 1)];
random::seed("foo");
let y = [random::number(0, 1), random::number(0, 1), random::number(0, 1)];
assert(x == y);
