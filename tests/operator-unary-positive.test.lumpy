try { dumpln( +null         ); } else err { dumpln(err); }
try { dumpln( +true         ); } else err { dumpln(err); }
try { dumpln( +123          ); } else err { dumpln(err); }
try { dumpln( +"foo"        ); } else err { dumpln(err); }
try { dumpln( +[]           ); } else err { dumpln(err); }
try { dumpln( +map{}        ); } else err { dumpln(err); }
try { dumpln( +set{}        ); } else err { dumpln(err); }
try { dumpln( +123.&        ); } else err { dumpln(err); }
try { dumpln( +function(){} ); } else err { dumpln(err); }
try { dumpln( +println      ); } else err { dumpln(err); }

print("\n");

let meta = {"unary+": function(value) { println("overload"); return value; }};
let x = 123;
setmeta(x.&, meta);
dumpln(+x);
################################################################################
# "attempted unary + operation with type `null`"
# "attempted unary + operation with type `boolean`"
# 123
# "attempted unary + operation with type `string`"
# "attempted unary + operation with type `vector`"
# "attempted unary + operation with type `map`"
# "attempted unary + operation with type `set`"
# "attempted unary + operation with type `reference`"
# "attempted unary + operation with type `function`"
# "attempted unary + operation with type `function`"
#
# overload
# 123
