let meta = {"dumpself": function(self) { dumpln(self.*); }};
let x = 123;
dumpln(getmeta(x));
setmeta(x.&, meta);
dumpln(getmeta(x));
setmeta(x.&, null);
dumpln(getmeta(x));

try { setmeta(123.&, set{}); } else err { println("error: " + string(err)); }
################################################################################
# {"is_nan": is_nan@builtin, "is_inf": is_inf@builtin, "is_integer": is_integer@builtin, "fixed": fixed@builtin, "trunc": trunc@builtin, "round": round@builtin, "floor": floor@builtin, "ceil": ceil@builtin}
# {"dumpself": meta::dumpself@[builtin-setmeta.test.lumpy, line 1]}
# null
# error: expected null or map-like argument, received set
