let meta = {"dumpself": function(self) { dumpln(self.*); }};
let x = 123;
dumpln(getmeta(x));
setmeta(x.&, meta);
dumpln(getmeta(x));
setmeta(x.&, null);
dumpln(getmeta(x));

try { setmeta(123.&, set{}); } else err { println("error: " + string(err)); }
################################################################################
# {"is_nan": number::is_nan@builtin, "is_inf": number::is_inf@builtin, "is_integer": number::is_integer@builtin, "fixed": number::fixed@builtin, "trunc": number::trunc@builtin, "round": number::round@builtin, "floor": number::floor@builtin, "ceil": number::ceil@builtin}
# {"dumpself": meta::dumpself@[builtin-setmeta.test.lumpy, line 1]}
# null
# error: expected null or map-like argument, received set
