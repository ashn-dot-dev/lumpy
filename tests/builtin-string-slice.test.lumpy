println("\"foo=bar\".slice(0, 0) is " + repr("foo=bar".slice(0, 0)));
println("\"foo=bar\".slice(0, 7) is " + repr("foo=bar".slice(0, 7)));
println("\"foo=bar\".slice(0, 3) is " + repr("foo=bar".slice(0, 3)));
println("\"foo=bar\".slice(4, 7) is " + repr("foo=bar".slice(4, 7)));
println("\"abcðŸ˜€def\".slice(3, 7) is " + repr("abcðŸ˜€def".slice(3, 7)));
try { "foo=bar".slice(0.5, 1); } else err { println("\"foo=bar\".slice(0.5, 1) produces the error " + repr(err)); }
try { "foo=bar".slice(0, 1.5); } else err { println("\"foo=bar\".slice(0, 1.5) produces the error " + repr(err)); }
try { "foo=bar".slice(-1, 7); } else err { println("\"foo=bar\".slice(-1, 7) produces the error " + repr(err)); }
try { "foo=bar".slice(0, -1); } else err { println("\"foo=bar\".slice(0, -1) produces the error " + repr(err)); }
try { "foo=bar".slice(4, 3); } else err { println("\"foo=bar\".slice(4, 3) produces the error " + repr(err)); }
try { "abcðŸ˜€def".slice(4, 7); } else err { println("\"abcðŸ˜€def\".slice(4, 7) produces the error " + repr(err)); }
################################################################################
# "foo=bar".slice(0, 0) is ""
# "foo=bar".slice(0, 7) is "foo=bar"
# "foo=bar".slice(0, 3) is "foo"
# "foo=bar".slice(4, 7) is "bar"
# "abcðŸ˜€def".slice(3, 7) is "ðŸ˜€"
# "foo=bar".slice(0.5, 1) produces the error "expected integer index, received 0.5"
# "foo=bar".slice(0, 1.5) produces the error "expected integer index, received 1.5"
# "foo=bar".slice(-1, 7) produces the error "slice begin is less than zero"
# "foo=bar".slice(0, -1) produces the error "slice end is less than zero"
# "foo=bar".slice(4, 3) produces the error "slice end is less than slice begin"
# "abcðŸ˜€def".slice(4, 7) produces the error "invalid UTF-8 encoded string \"\\x9F\\x98\\x80\""
