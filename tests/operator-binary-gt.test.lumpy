let x = 123;
let y = 456;
let f = function() { println("f"); };
let g = function() { println("g"); };
try { dumpln( null            > null            ); } else err { dumpln(err); }
try { dumpln( true            > true            ); } else err { dumpln(err); }
try { dumpln( true            > false           ); } else err { dumpln(err); }
try { dumpln( 123             > 123             ); } else err { dumpln(err); }
try { dumpln( 123             > 456             ); } else err { dumpln(err); }
try { dumpln( 456             > 123             ); } else err { dumpln(err); }
try { dumpln( "foo"           > "foo"           ); } else err { dumpln(err); }
try { dumpln( "foo"           > "bar"           ); } else err { dumpln(err); }
try { dumpln( "bar"           > "foo"           ); } else err { dumpln(err); }
try { dumpln( [123]           > [123]           ); } else err { dumpln(err); }
try { dumpln( [123]           > [456]           ); } else err { dumpln(err); }
try { dumpln( map{"abc": 123} > map{"abc": 123} ); } else err { dumpln(err); }
try { dumpln( map{"abc": 123} > map{"abc": 456} ); } else err { dumpln(err); }
try { dumpln( set{"abc"}      > set{"abc"}      ); } else err { dumpln(err); }
try { dumpln( set{"abc"}      > set{"xyz"}      ); } else err { dumpln(err); }
try { dumpln( x.&             > x.&             ); } else err { dumpln(err); }
try { dumpln( x.&             > y.&             ); } else err { dumpln(err); }
try { dumpln( f               > f               ); } else err { dumpln(err); }
try { dumpln( f               > g               ); } else err { dumpln(err); }
try { dumpln( println         > println         ); } else err { dumpln(err); }
try { dumpln( println         > dumpln          ); } else err { dumpln(err); }
################################################################################
# "attempted > operation with types `null` and `null`"
# "attempted > operation with types `boolean` and `boolean`"
# "attempted > operation with types `boolean` and `boolean`"
# false
# false
# true
# false
# true
# false
# "attempted > operation with types `vector` and `vector`"
# "attempted > operation with types `vector` and `vector`"
# "attempted > operation with types `map` and `map`"
# "attempted > operation with types `map` and `map`"
# "attempted > operation with types `set` and `set`"
# "attempted > operation with types `set` and `set`"
# "attempted > operation with types `reference` and `reference`"
# "attempted > operation with types `reference` and `reference`"
# "attempted > operation with types `function` and `function`"
# "attempted > operation with types `function` and `function`"
# "attempted > operation with types `function` and `function`"
# "attempted > operation with types `function` and `function`"
